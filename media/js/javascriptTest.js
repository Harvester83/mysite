/* глобальная переменная (внимание - использование глобальных переменных является антипаттерном) */var allUserData = [];// определение функции logStuff для вывода в консольfunction logStuff(userData) {    if (typeof userData === 'string') {        console.log(userData);    } else if (typeof userData === 'object') {        for (var item in userData) {            console.log(item + ': '  + userData[item]);        }    }}// Функция, принимающая два параметра, одним из которых является коллбэк/*function getInput(options, callback) {    allUserData.push(options);    callback(options);}*/function getInput(options, callback) {    allUserData.push(options);    if (typeof callback === 'function') {        callback(options);    }}// Пример вызова функции getInput с коллбкомgetInput({ name: 'Rich', speciality: 'JavaScript' }, logStuff);console.log('*****************');var userData = {    id: 094545,    fullName: 'Unknown',    setUserName: function(firstName, lastName)  {        this.fullName = firstName + ' ' + lastName;    }};function getUserInput(firstName, lastName, callback)  {    callback(firstName, lastName);}getUserInput('John', 'Snow', userData.setUserName);console.log(userData.fullName); // Unknownconsole.log(window.fullName); // John Snow/* Добавим еще один параметр "callbackObj", в котором будет передаваться контекст выполнения функции */function getUserInput(firstName, lastName, callback, callbackObj) {    callback.apply(callbackObj, [firstName, lastName]);}getUserInput('John', 'Snow', userData.setUserName, userData);console.log(userData.fullName); // John Snow